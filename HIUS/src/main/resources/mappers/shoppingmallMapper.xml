<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="HIUS.mappers.shoppinmallMapper">
<select id="shopSelect" resultType="model.ShopgoodsDTO">
	select shop_goods_no shopgoodsNo, shop_goods_class shopgoodsClass, shop_goods_name shopgoodsName, shop_goods_set shopgoodsSet, shop_goods_detail shopgoodsDetail, shop_goods_img shopgoodsImage, shop_goods_qty shopgoodsQty, shop_goods_price shopgoodsPrice from shop_goods
</select>
<select id="shopDetail" parameterType="string" resultType="model.ShopgoodsDTO">
	select shop_goods_no shopgoodsNo, shop_goods_class shopgoodsClass, shop_goods_name shopgoodsName, shop_goods_set shopgoodsSet, shop_goods_detail shopgoodsDetail, shop_goods_img shopgoodsImage, shop_goods_qty shopgoodsQty, shop_goods_price shopgoodsPrice from shop_goods
	where shop_goods_no = #{shopgoodsNo}
</select>
<select id="shopCart" resultType="string">
	select ex_seq.nextval from dual
</select>
<select id="shopOrderNo" parameterType="string" resultType="string">
	select CORDER_NO from CORDER where CORDER_NO not in (select corder_no from shop_pay ) 
	and  MEM_ID = #{memId}
</select>

<select id="sumPrice" resultType="int">
select nvl(sum(SHOP_GOODS_PRICE),0) 
from  SHOP_GOODS 
where SHOP_GOODS_NO in (
						select SHOP_GOODS_NO 
						from CORDER_LI 
						where CORDER_NO IN (select CORDER_NO 
											from CORDER 
											where CORDER_NO not in (select corder_no 
																	from shop_pay ) 
																	and  MEM_ID = #{memId}))
</select>

<insert id="orderInsert" parameterType="model.ShopCartDTO">
 insert into CORDER(CORDER_NO, CORDER_PAY, RCV_NAME, RCV_ADDR, MEM_ID)
 values (#{orderNo}, #{orderPay},1111,1111, #{memId})
</insert>
<update id="orderUpdate">
	update CORDER
	set CORDER_PAY = #{orderPay}
	where CORDER_NO = #{orderNo}
</update>
<insert id="orderlistInsert" parameterType="model.ShopCartListDTO">
insert into CORDER_LI(CORDER_LI_NO, SHOP_GOODS_NO, CORDER_NO, SHOP_GOODS_NAME, SHOP_GOODS_QTY)
values (ex_seq.nextval,#{shopgoodsNo}, #{orderNo}, #{shopgoodsName}, #{shopgoodsQty})

</insert>
<select id="shopList" parameterType="string" resultType="model.ShopCartListDTO">
select CORDER_LI_NO orderListNo, l.SHOP_GOODS_NO shopgoodsNo, 
        l.CORDER_NO orderNo, l.SHOP_GOODS_NAME shopgoodsName, l.SHOP_GOODS_QTY shopgoodsQty,  replace(SHOP_GOODS_IMG,'`','') shopGoodsImg
from CORDER_LI l, corder c, shop_goods g
where l.corder_no = c.corder_no and l.SHOP_GOODS_NO = g.SHOP_GOODS_NO
and c.mem_id = #{memId}  
and c.CORDER_NO not in (select corder_no from shop_pay)
</select>


<select id="shopCartOrderList" parameterType="string" resultType="model.ShopOrderListDTO">
	select  g.SHOP_GOODS_NAME shopgoodName, g.SHOP_GOODS_PRICE shopgoodsPrice, replace(g.SHOP_GOODS_IMG,'`','') shopgoodsImage, c.CORDER_PAY orderPay, l.SHOP_GOODS_QTY shopgoodsQty
	, c.CORDER_NO orderNo
	from shop_goods g, corder_li l, corder c
	where g.SHOP_GOODS_NO = l.SHOP_GOODS_NO and l.CORDER_NO = c.CORDER_NO and c.CORDER_NO = #{memId}
</select>
<insert id="insertPay" parameterType="model.ShopPayDTO">
	insert into shop_pay (SHOP_PAY_NO, CORDER_NO, SHOP_PAY_SUM, SHOP_PAY_MET, SHOP_PAY_DATE)
	values(ex_seq.nextval , #{orderNo}, #{shopPaysum}, #{shopPaymet}, sysdate)
</insert>
<update id="updateOrder" parameterType="model.ShopCartDTO">
	update corder
	set RCV_NAME = #{rcvName}, RCV_ADDR = #{rcvAddr}
	where CORDER_NO = #{orderNo}
</update>
<resultMap type="model.PayGoodsDTO" id="resultPayGoods">
	<association property="shopPayDTO" javaType="model.ShopPayDTO">
		<id column="SHOP_PAY_NO" jdbcType="VARCHAR" property="shopPayNo" />
		<result column="SHOP_PAY_SUM" jdbcType="BIGINT" property="shopPaysum"/>
		<result column="CORDER_NO" jdbcType="VARCHAR" property="orderNo"/>
	</association>
	<collection property="goodsList" ofType="model.GoodsDTO">
		<result column="SHOP_GOODS_QTY" jdbcType="BIGINT" property="goodsQty"/>
		<result column="SHOP_GOODS_PRICE" jdbcType="BIGINT" property="goodsPrice"/>
		<result column="SHOP_GOODS_IMG" jdbcType="VARCHAR" property="goodsImg"/>
		<result column="SHOP_GOODS_NAME" jdbcType="VARCHAR" property="goodsName"/>
	</collection>
</resultMap>
<select id="shopPayList" parameterType="string" resultMap="resultPayGoods">
select p.SHOP_PAY_NO , p.SHOP_PAY_SUM , p.CORDER_NO, l.SHOP_GOODS_QTY, s.SHOP_GOODS_PRICE, 
	   replace(s.SHOP_GOODS_IMG,'`','') SHOP_GOODS_IMG, s.SHOP_GOODS_NAME
from shop_pay p , corder_li l , shop_goods s
where p.CORDER_NO = l.CORDER_NO and l.SHOP_GOODS_NO = s.SHOP_GOODS_NO 
and l.CORDER_NO = #{orderNo}
</select>
<select id="payOrderNo" parameterType="string" resultType="string">
	select CORDER_NO from CORDER where CORDER_NO in (select corder_no from shop_pay ) and  MEM_ID = #{memId}
</select>
</mapper>

